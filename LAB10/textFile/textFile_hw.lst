     1                                  ;A file name and a text (defined in data segment) are given. The text contains lowercase letters, uppercase letters, digits and special characters. Replace all digits from the text with character 'C'. Create a file 
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit, fopen, fprintf, fclose
     9                                  import exit msvcrt.dll         
    10                                  import fopen msvcrt.dll         
    11                                  import fprintf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17                                      
    18 00000000 6F75747075742E7478-         file_name db "output.txt",0
    18 00000009 7400               
    19 0000000B 7700                        acces_mode db "w",0
    20 0000000D FFFFFFFF                    file_descriptor dd -1
    21                                      
    22 00000011 257300                      format db "%s",0
    23                                      
    24 00000014 7230616E31646F6D32-         text db "r0an1dom2T7EXT&*4*(!"
    24 0000001D 5437455854262A342A-
    24 00000026 2821               
    25                                      len equ $-text
    26 00000028 <res 00000014>              generated_text resb len
    27                                      
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; A file name and a text (defined in data segment) are given. The text contains lowercase letters, uppercase letters, digits and special characters. Replace all digits from the text with character 'C'. Creat
    33 00000000 BE[14000000]                    mov esi,text
    34 00000005 BF[28000000]                    mov edi,generated_text
    35 0000000A B914000000                      mov ecx,len
    36                                          text_loop:
    37 0000000F AC                                  lodsb
    38 00000010 3C30                                cmp al,'0'
    39 00000012 7206                                jb not_digit
    40 00000014 3C39                                    cmp al,'9'
    41 00000016 7702                                    ja not_digit
    42 00000018 B043                                        mov al,'C'
    43                                              not_digit:
    44 0000001A AA                                      stosb
    45 0000001B E2F2                            loop text_loop
    46                                          
    47 0000001D 68[0B000000]                    push dword acces_mode
    48 00000022 68[00000000]                    push dword file_name
    49 00000027 FF15[00000000]                  call [fopen]
    50 0000002D 83C408                          add esp,4*2
    51                                          
    52 00000030 A3[0D000000]                    mov [file_descriptor],eax
    53                                          
    54 00000035 68[28000000]                    push dword generated_text
    55 0000003A 68[11000000]                    push dword format
    56 0000003F FF35[0D000000]                  push dword [file_descriptor]
    57 00000045 FF15[00000000]                  call [fprintf]
    58 0000004B 83C40C                          add esp,4*3
    59                                          
    60 0000004E FF35[0D000000]                  push dword [file_descriptor]
    61 00000054 FF15[00000000]                  call [fclose]
    62 0000005A 83C404                          add esp,4
    63                                      
    64                                          ; exit(0)
    65 0000005D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    66 0000005F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
