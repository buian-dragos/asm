     1                                  bits 32
     2                                  
     3                                  
     4                                  global start
     5                                  
     6                                  extern printf
     7                                  import printf msvcrt.dll
     8                                  
     9                                                           
    10                                  segment data public data use32
    11                                  
    12 00000000 4F5051525354555657-         new_alphabet db "OPQRSTUVWXYZABCDEFGHIJKLMN",0
    12 00000009 58595A414243444546-
    12 00000012 4748494A4B4C4D4E00 
    13 0000001B <res 00000065>              message resb 101
    14 00000080 00                          temp db 0
    15 00000081 257300                      format db "%s",0
    16 00000084 616E616172656D6572-         ttt db "anaaremere",0
    16 0000008D 6500               
    17                                  
    18                                  segment code public code use32
    19                                  start:
    20                                      ;change_alphabet(string,len)
    21 00000000 55                          push ebp
    22 00000001 89EC                        mov esp,ebp
    23 00000003 60                          pushad
    24                                  
    25                                      ;ebp+8 first param = esp+8
    26                                  
    27                                      ;mov esi,[esp + 8]
    28                                      ;mov ecx,[esp + 12]
    29 00000004 BE[84000000]                mov esi,ttt
    30 00000009 B90A000000                  mov ecx,10
    31 0000000E BF[1B000000]                mov edi,message
    32                                  
    33                                      .change_loop:
    34 00000013 B800000000                      mov eax,0
    35 00000018 AC                              lodsb
    36 00000019 89C2                            mov edx,eax
    37 0000001B 83EA61                          sub edx,'a'
    38 0000001E 8B82[00000000]                  mov eax,[new_alphabet + edx]
    39 00000024 AA                              stosb
    40 00000025 E2EC                        loop .change_loop
    41                                      
    42                                      ;popad
    43 00000027 89EC                        mov esp,ebp
    44 00000029 5D                          pop ebp
    45                                  
    46 0000002A B8[1B000000]                mov eax,message
    47 0000002F 50                          push eax
    48 00000030 68[81000000]                push dword format
    49 00000035 FF15[00000000]              call [printf]
    50                                  
    51 0000003B C3                          ret
