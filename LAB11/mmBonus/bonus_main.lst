     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf               
     8                                  import exit msvcrt.dll    
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 <res 0000003C>              a resd 15
    15 0000003C 00000000                    temp dd 0
    16 00000040 00000000                    ttt dd 0
    17 00000044 256400                      format db "%d",0
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 BF[00000000]                    mov edi,a
    23                                          test_loop:
    24 00000005 68[3C000000]                        push dword temp
    25 0000000A 68[44000000]                        push dword format
    26 0000000F FF15[00000000]                      call [scanf]
    27 00000015 83C408                              add esp,4*2
    28                                              
    29 00000018 A1[3C000000]                        mov eax,[temp]
    30 0000001D AB                                  stosd
    31                                                  
    32 0000001E 833D[3C000000]00                    cmp dword [temp],0
    33 00000025 75DE                            jne test_loop
    34                                          
    35                                          
    36                                          
    37 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
